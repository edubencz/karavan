- rest:
    id: rest-api-pix
    post:
      - id: post-api-pix
        path: /teste
        to: direct:validar-payload
        consumes: application/json
        produces: application/json
- route:
    id: route-recebe-requisicao
    nodePrefixId: route-recebe-requisicao
    from:
      id: from-api-pix
      uri: direct
      parameters:
        name: validar-payload
      steps:
        - doTry:
            id: doTry-valida-payload
            doCatch:
              - id: doCatch-valida-payload
                exception:
                  - java.lang.Exception
                steps:
                  - convertBodyTo:
                      id: convertBodyTo-exception-string
                      type: java.lang.String
                  - setHeader:
                      id: setHeader-ca85
                      name: CamelHttpResponseCode
                      expression:
                        simple:
                          id: simple-status-400
                          expression: "400"
                  - setHeader:
                      id: setHeader-exception-content
                      name: Content-Type
                      expression:
                        constant:
                          id: constant-content-json
                          expression: application/json
                  - setBody:
                      id: setBody-exception-message
                      expression:
                        simple:
                          id: simple-exception-message
                          expression: >-
                            { "mensagem": "Erro no payload:
                            ${exception.message.replaceAll('\r?\n', ' ')}" }
                  - stop:
                      id: stop-on-exception
            steps:
              - to:
                  id: to-json-validator-schema
                  uri: json-validator
                  parameters:
                    resourceUri: file:nexdom-schema.json
              - unmarshal:
                  id: unmarshal-json
                  json:
                    id: json-unmarshal
              - setProperty:
                  id: setProperty-rota
                  description: "Variavel: rota"
                  name: rota
                  expression:
                    simple:
                      id: simple-extract-rota
                      expression: ${body[rota]}
              - setProperty:
                  id: setProperty-dadosBoleto
                  description: "Variavel: dadosBoleto"
                  name: dadosBoleto
                  expression:
                    simple:
                      id: simple-extract-dadosBoleto
                      expression: |
                        ${body[dadosBoleto]}
              - setProperty:
                  id: setProperty-dadosBanco
                  description: "Variavel: dadosBanco"
                  name: dadosBanco
                  expression:
                    simple:
                      id: simple-extract-dadosBanco
                      expression: ${body[dadosBanco]}
              - setProperty:
                  id: setProperty-beneficiario
                  description: "Variavel: beneficiario"
                  name: beneficiario
                  expression:
                    simple:
                      id: simple-extract-beneficiario
                      expression: ${body[beneficiario]}
              - setProperty:
                  id: setProperty-pagador
                  description: "Variavel: pagador"
                  name: pagador
                  expression:
                    simple:
                      id: simple-extract-pagador
                      expression: ${body[pagador]}
              - setProperty:
                  id: setProperty-instrucoes
                  description: "Variavel: instrucoes"
                  name: instrucoes
                  expression:
                    simple:
                      id: simple-77cc
                      expression: ${body[instrucoes]}
              - setProperty:
                  id: setProperty-mensagens
                  description: "Variavel: mensagens"
                  name: mensagens
                  expression:
                    simple:
                      id: simple-extract-mensagens
                      expression: ${body[mensagens]}
              - setProperty:
                  id: setProperty-descontos
                  description: "Variavel: descontos"
                  name: descontos
                  expression:
                    simple:
                      id: simple-extract-descontos
                      expression: ${body[descontos]}
              - setProperty:
                  id: setProperty-redis-banco-key
                  description: "Variavel: redisKey"
                  name: redisKey
                  expression:
                    simple:
                      id: simple-176c
                      expression: >-
                        apipix:${exchangeProperty.rota[codigoUnimed]}:${exchangeProperty.rota[codigoBanco]}
              - setProperty:
                  id: setProperty-ffe9
                  description: "Variavel: redisToken"
                  name: redisToken
                  expression:
                    simple:
                      id: simple-d8fd
                      expression: ${exchangeProperty.redisKey}:token
              - marshal:
                  id: marshal-payload-json
                  json:
                    id: json-marshal
              - to:
                  id: to-validate-banco
                  uri: direct
                  parameters:
                    name: redis-valida-token
- route:
    id: redis-valida-token
    nodePrefixId: route-redis-valida
    from:
      id: from-route-recebe-requisicao
      uri: direct
      parameters:
        name: redis-valida-token
      steps:
        - log:
            id: log-28c0
            message: "#####ROUTE REDIS-VALIDA-TOKEN#####"
        - setHeader:
            id: setHeader-redis-token-key
            name: CamelRedis.Key
            expression:
              simple:
                id: simple-3c0f
                expression: ${exchangeProperty.redisToken}
        - to:
            id: to-480b
            description: ExisteToken
            uri: kamelet:redis-sink
            parameters:
              redisHost: fesc-sql-dev01.fesc.sgusuite.com.br
              redisPort: 6379
              command: EXISTS
        - log:
            id: log-resultado-redis
            message: ${body}
        - choice:
            id: choice-redis-existe-token
            description: Choice:ExisteToken
            when:
              - id: when-a54b
                expression:
                  simple:
                    id: simple-97dd
                    expression: ${body} == true
                steps:
                  - to:
                      id: to-95c5
                      description: BuscaToken
                      uri: kamelet:redis-sink
                      parameters:
                        redisHost: fesc-sql-dev01.fesc.sgusuite.com.br
                        redisPort: 6379
                        command: GET
                  - log:
                      id: log-523b
                      message: TOKEN BANCO> ${body}
                  - setProperty:
                      id: setProperty-token-valido
                      description: "TOKEN: tokenBancario"
                      name: tokenBancario
                      expression:
                        simple:
                          id: simple-f024
                          expression: ${body}
                  - log:
                      id: log-4be1
                      message: "TOKKKEN: ${exchangeProperty.tokenBancario}"
            otherwise:
              id: otherwise-78e1
              steps:
                - to:
                    id: to-redis-gera-oauth2-token
                    uri: direct
                    parameters:
                      name: redis-gera-oauth2-token
                - log:
                    id: log-d6aa
                    message: "## VOLTOU PARA REDIS VALIDA TOKEN#####"
        - to:
            id: to-8cfe
            uri: direct
            parameters:
              name: valida-banco
        - log:
            id: log-f58b
            description: "LOG: FIM DO PROCESSO"
            message: ${body}
        - convertBodyTo:
            id: convertBodyTo-string
            type: java.lang.String
        - setBody:
            id: setBody-fd1e
            expression:
              simple:
                id: simple-cfba
                expression: ${body}
- route:
    id: redis-gera-oauth2-token
    from:
      id: from-redis-valida-token
      uri: direct
      parameters:
        name: redis-gera-oauth2-token
      steps:
        - log:
            id: log-89a1
            message: "####ROUTE-GERA-OAUTH2-TOKEN######"
        - setHeader:
            id: setHeader-9267
            name: CamelRedis.Key
            expression:
              simple:
                id: simple-260a
                expression: ${exchangeProperty.redisKey}
        - to:
            id: redis-busca-dados-banco
            description: BuscaDadosBanco
            uri: kamelet:redis-sink
            parameters:
              redisHost: fesc-sql-dev01.fesc.sgusuite.com.br
              redisPort: 6379
              command: EXISTS
        - log:
            id: log-16c1
            message: ${body}
        - choice:
            id: choice-dadd
            disabled: false
            when:
              - id: when-e23d
                disabled: false
                expression:
                  simple:
                    id: simple-3775
                    expression: ${body} == true
                steps:
                  - to:
                      id: to-redis-busca-chaves
                      description: RedisGetDadosBanco
                      uri: kamelet:redis-sink
                      parameters:
                        redisHost: fesc-sql-dev01.fesc.sgusuite.com.br
                        redisPort: 6379
                        command: GET
                  - unmarshal:
                      id: unmarshal-busca-chaves
                      json:
                        id: json-e49b
                        library: Jackson
                  - setProperty:
                      id: setProperty-appKey
                      description: "Banco: bancoAppKey"
                      name: bancoAppKey
                      expression:
                        simple:
                          id: simple-3f62
                          expression: ${body[AppKey]}
                  - setProperty:
                      id: setProperty-ClientId
                      description: "Banco: bancoClientId"
                      name: bancoClientId
                      expression:
                        simple:
                          id: simple-d07d
                          expression: ${body[ClientId]}
                  - setProperty:
                      id: setProperty-ClientSecret
                      description: "Banco: bancoClientSecret"
                      name: bancoClientSecret
                      expression:
                        simple:
                          id: simple-e743
                          expression: ${body[ClientSecret]}
                  - setProperty:
                      id: setProperty-banco-certificado
                      description: "Banco: bancoCertificado"
                      name: bancoCertificado
                      expression:
                        simple:
                          id: simple-6994
                          expression: ${body[Certificado]}
                  - setProperty:
                      id: setProperty-banco-senhaCert
                      description: "Banco: bancoSenhaCertificado"
                      name: bancoSenhaCertificado
                      expression:
                        simple:
                          id: simple-a3c9
                          expression: ${body[Senha]}
                  - setProperty:
                      id: setProperty-banco-scopes
                      description: "Banco: bancoScopes"
                      name: bancoScopes
                      expression:
                        simple:
                          id: simple-0320
                          expression: ${body[Scopes]}
                  - to:
                      id: to-944f
                      uri: direct
                      parameters:
                        name: redis-auth2-token
            otherwise:
              id: otherwise-efaf
              steps:
                - log:
                    id: log-6c3f
                    message: "### ERRO CHAVE NAO ENCONTRADA###"
                - setHeader:
                    id: setHeader-nao-existe-banco
                    name: CamelHttpResponseCode
                    expression:
                      simple:
                        id: simple-b4d9
                        expression: "400"
                - setBody:
                    id: setBody-296e
                    expression:
                      simple:
                        id: simple-1504
                        expression: >-
                          { "erro": "Chaves do banco/Unimed não encontradas no
                          Vault",

                          "codigoBanco": ${exchangeProperty.rota[codigoBanco]}

                          }
                - stop:
                    id: stop-dados-bancarios
- route:
    id: redis-auth2-token
    from:
      id: from-redis-auth2-token
      uri: direct
      parameters:
        name: redis-auth2-token
      steps:
        - log:
            id: log-ab81
            message: "### ROUTE-REDIS-AUTH2-TOKEN####"
        - choice:
            id: choice-auth2-identifica-banco
            when:
              - id: when-auth2-bb
                description: Banco == 1
                expression:
                  simple:
                    id: simple-a0b6
                    expression: ${exchangeProperty.rota[codigoBanco]} == 1
                steps:
                  - setBody:
                      id: setBody-auth2-bb-scopes
                      expression:
                        simple:
                          id: simple-8bb0
                          expression: >-
                            grant_type=client_credentials&scopes:
                            ${exchangeProperty[bancoScopes]}
                  - setHeader:
                      id: setHeader-6d5f
                      description: Content-Type
                      name: Content-Type
                      expression:
                        simple:
                          id: simple-8e29
                          expression: application/x-www-form-urlencoded
                  - setHeader:
                      id: setHeader-7a86
                      name: Authorization
                      expression:
                        simple:
                          id: simple-e6a0
                          expression: Basic ${exchangeProperty.bancoClientSecret}
                  - toD:
                      id: to-req-oauth2-bb
                      uri: https
                      parameters:
                        httpUri: oauth.hm.bb.com.br/oauth/token
                        httpMethod: POST
                        bridgeEndpoint: true
                        logHttpActivity: false
                  - unmarshal:
                      id: unmarshal-recebe-token
                      json:
                        id: json-07e8
                  - log:
                      id: log-b807
                      message: ${body[access_token]}
                  - setProperty:
                      id: setProperty-2a48
                      description: "Variavel: tokenBancario"
                      name: tokenBancario
                      expression:
                        simple:
                          id: simple-0098
                          expression: ${body[access_token]}
                  - log:
                      id: log-4b78
                      message: "#####RECEBEU TOKEN  BANCO#######"
                  - log:
                      id: log-6f11
                      message: ${exchangeProperty.tokenBancario}
            otherwise:
              id: otherwise-auth2-identifica-banco
              steps:
                - setHeader:
                    id: setHeader-1851
                    name: CamelHttpResponseCode
                    expression:
                      simple:
                        id: simple-26ed
                        expression: "400"
                - setBody:
                    id: setBody-5135
                    expression:
                      simple:
                        id: simple-ed61
                        expression: >-
                          { erro: "Banco não idetificado para busca do token
                          oAuth2",

                          "codigoBanco": ${exchangeProperty.rota[codigoBanco]}

                          }
                - stop:
                    id: stop-d54d
        - choice:
            id: choice-valida-recebeu-token
            disabled: false
            when:
              - id: when-e5fc
                description: RecebeuToken
                expression:
                  simple:
                    id: simple-9e45
                    expression: ${exchangeProperty.tokenBancario} != ""
                steps:
                  - log:
                      id: log-afe0
                      message: ${exchangeProperty.redisToken}
                  - setHeader:
                      id: setHeader-e778
                      name: CamelRedis.Key
                      expression:
                        simple:
                          id: simple-63a6
                          expression: ${exchangeProperty.redisToken}
                  - setHeader:
                      id: setHeader-6e15
                      name: CamelRedis.Timeout
                      expression:
                        simple:
                          id: simple-934c
                          expression: ${body[expires_in]}
                  - setHeader:
                      id: setHeader-9175
                      disabled: true
                      name: CamelRedis.Value
                      expression:
                        simple:
                          id: simple-32fe
                          expression: ${exchangeProperty.tokenBancario}
                  - setBody:
                      id: setBody-1cd4
                      disabled: false
                      expression:
                        simple:
                          id: simple-ecb2
                          expression: ${exchangeProperty.tokenBancario}
                  - to:
                      id: to-redis-set-token
                      description: CriaToken
                      uri: kamelet:redis-sink
                      parameters:
                        redisHost: fesc-sql-dev01.fesc.sgusuite.com.br
                        redisPort: 6379
                        command: SETEX
                  - log:
                      id: log-4a23
                      message: "####TOKEN-SALVO-BANCO#####"
            otherwise:
              id: otherwise-5ab6
              steps:
                - setBody:
                    id: setBody-retorno-erro-banco-token
                    expression:
                      simple:
                        id: simple-c0be
                        expression: ${body}
                - stop:
                    id: stop-678a
- route:
    id: route-valida-banco
    nodePrefixId: route-valida-banco
    from:
      id: from-redis-valida-token
      uri: direct
      parameters:
        name: valida-banco
      steps:
        - log:
            id: log-05db
            message: "#### ROUTE-VALIDA-BANCO ######"
        - choice:
            id: choice-roteamento-banco
            when:
              - id: when-banco-brasil
                description: Banco == 1
                expression:
                  simple:
                    id: simple-match-brasil
                    expression: ${exchangeProperty.rota[codigoBanco]} == 1
                steps:
                  - to:
                      id: to-banco-brasil
                      uri: direct
                      parameters:
                        name: banco-brasil
              - id: when-banco-bradesco
                expression:
                  simple:
                    id: simple-match-bradesco
                    expression: ${exchangeProperty.rota[codigoBanco].intValue} == 234
                steps:
                  - to:
                      id: to-banco-bradesco
                      uri: direct
                      parameters:
                        name: banco-bradesco
              - id: when-banco-sicoob
                expression:
                  simple:
                    id: simple-match-sicoob
                    expression: ${exchangeProperty.rota[codigoBanco].intValue} == 756
                steps:
                  - to:
                      id: to-banco-sicoob
                      uri: direct
                      parameters:
                        name: banco-sicoob
              - id: when-banco-unicred
                expression:
                  simple:
                    id: simple-match-unicred
                    expression: ${exchangeProperty.rota[codigoBanco].intValue} == 748
                steps:
                  - to:
                      id: to-banco-unicred
                      uri: direct
                      parameters:
                        name: banco-unicred
              - id: when-banco-santander
                expression:
                  simple:
                    id: simple-match-santander
                    expression: ${exchangeProperty.rota[codigoBanco].intValue} == 33
                steps:
                  - to:
                      id: to-banco-santander
                      uri: direct
                      parameters:
                        name: banco-santander
              - id: when-banco-sicredi
                expression:
                  simple:
                    id: simple-match-sicredi
                    expression: ${exchangeProperty.rota[codigoBanco].intValue} == 748
                steps:
                  - to:
                      id: to-banco-sicredi
                      uri: direct
                      parameters:
                        name: banco-sicredi
              - id: when-banco-safra
                expression:
                  simple:
                    id: simple-match-safra
                    expression: ${exchangeProperty.rota[codigoBanco].intValue} == 422
                steps:
                  - to:
                      id: to-banco-safra
                      uri: direct
                      parameters:
                        name: banco-safra
              - id: when-banco-itau
                expression:
                  simple:
                    id: simple-match-itau
                    expression: ${exchangeProperty.rota[codigoBanco].intValue} == 341
                steps:
                  - to:
                      id: to-banco-itau
                      uri: direct
                      parameters:
                        name: banco-itau
            otherwise:
              id: otherwise-banco-invalido
              steps:
                - setHeader:
                    id: setHeader-status-erro-banco
                    name: CamelHttpResponseCode
                    expression:
                      simple:
                        id: simple-status-400
                        expression: "400"
                - setBody:
                    id: setBody-mensagem-banco-invalido
                    expression:
                      simple:
                        id: simple-msg-banco-invalido
                        expression: |
                          {
                            "erro": "Banco inválido",
                            "codigoBanco": "${exchangeProperty.rota[codigoBanco]}"
                          }
                - stop:
                    id: stop-b758
- route:
    id: route-banco-brasil
    nodePrefixId: route-banco-brasil
    from:
      id: from-banco-brasil
      uri: direct
      parameters:
        name: banco-brasil
      steps:
        - log:
            id: log-589f
            message: "##ROUTE-BANCO-BRASIL-PEGOU-TOKEN#####"
        - choice:
            id: choice-operacao-bb
            disabled: false
            when:
              - id: when-bb-inclusao
                description: novoBoleto
                expression:
                  simple:
                    id: simple-op-bb-inclusao
                    expression: ${exchangeProperty.rota[tipo]} == "inclusao"
                steps:
                  - setProperty:
                      id: setProperty-inclusao-forpayload
                      description: forpaypload
                      name: forpayload
                      expression:
                        simple:
                          id: simple-inclusao-forpayload
                          expression: |-
                            {
                              "numeroConvenio": ${exchangeProperty.dadosBanco[convenio]},
                              "numeroCarteira": ${exchangeProperty.dadosBanco[carteira]},
                              "numeroVariacaoCarteira": ${exchangeProperty.dadosBanco[variacao]},
                              "codigoModalidade": ${exchangeProperty.dadosBanco[codigoModalidade]},
                              "dataEmissao": "${bean:formataData.tratarData(${exchangeProperty.dadosBoleto[dataEmissao]},'dd.MM.yyyy')}",
                              "dataVencimento": "${bean:formataData.tratarData(${exchangeProperty.dadosBoleto[dataVencimento]},'dd.MM.yyyy')}",
                              "valorOriginal": ${exchangeProperty.dadosBoleto[valorNominal]},
                              "valorAbatimento": ${exchangeProperty.descontos[valorDesconto]},
                              "quantidadeDiasProtesto": ${exchangeProperty.dadosBoleto[quantidadeDiasProtesto]},
                              "quantidadeDiasNegativacao": ${exchangeProperty.dadosBoleto[quantidadeDiasNegativacao]},
                              "orgaoNegativador": 0,
                              "indicadorAceiteTituloVencido": "${exchangeProperty.dadosBoleto[aceiteTituloVencido]}",
                              "numeroDiasLimiteRecebimento": ${exchangeProperty.dadosBoleto[numeroDiasLimiteRecebimento]},
                              "codigoAceite": "${exchangeProperty.dadosBoleto[aceite]}",
                              "codigoTipoTitulo": ${exchangeProperty.dadosBoleto[codigoTipoTitulo]},
                              "indicadorPermissaoRecebimentoParcial": "N",
                              "numeroTituloBeneficiario": "${exchangeProperty.dadosBoleto[numeroDocumento]}",
                              "campoUtilizacaoBeneficiario": "${exchangeProperty.dadosBoleto[numeroDocumento]}",
                              "numeroTituloCliente": "${exchangeProperty.dadosBoleto[numeroNossoNumero]}",
                              "mensagemBloquetoOcorrencia": "${exchangeProperty.dadosBoleto[mensagemBloquetoOcorrencia]}",
                              "jurosMora": {
                                "tipo": ${exchangeProperty.dadosBoleto[tipoJuros]},
                                "valor": ${exchangeProperty.dadosBoleto[valorJuros]}
                              },
                              "multa": {
                                "tipo": ${exchangeProperty.dadosBoleto[tipoMulta]},
                                "data": "${bean:formataData.tratarData(${exchangeProperty.dadosBoleto[dataMulta]},'dd.MM.yyyy')}",
                                "porcentagem": ${exchangeProperty.dadosBoleto[percentualMulta]}
                              },
                              "pagador": {
                                "tipoInscricao": ${exchangeProperty.pagador[tipoPessoaNumero]},
                                "numeroInscricao": ${exchangeProperty.pagador[documento]},
                                "nome": "${exchangeProperty.pagador[nome]}",
                                "endereco": "${exchangeProperty.pagador[endereco][logradouro]}",
                                "cep": ${exchangeProperty.pagador[endereco][cep]},
                                "cidade": "${exchangeProperty.pagador[endereco][cidade]}",
                                "bairro": "${exchangeProperty.pagador[endereco][bairro]}",
                                "uf": "${exchangeProperty.pagador[endereco][uf]}",
                                "telefone": "${exchangeProperty.pagador[telefone]}",
                                "email": null
                              },
                              "beneficiarioFinal": {
                                "tipoInscricao": ${exchangeProperty.beneficiario[tipoPessoaNumero]},
                                "numeroInscricao": ${exchangeProperty.beneficiario[documento]},
                                "nome": "${exchangeProperty.beneficiario[nome]}"
                              },
                              "indicadorPix": "S"
                            }
                  - setBody:
                      id: setBody-json-bb-inclusao
                      expression:
                        simple:
                          id: simple-json-bb-inclusao
                          expression: ${exchangeProperty.forpayload}
              - id: when-bb-alteracao
                description: alteraBoleto
                expression:
                  simple:
                    id: simple-op-bb-alteracao
                    expression: ${exchangeProperty.rota[tipo]} == "alteracao"
                steps:
                  - setProperty:
                      id: setProperty-alteracao-forpayload
                      description: forpaypload
                      name: forpayload
                      expression:
                        simple:
                          id: simple-alteracao-forpayload
                          expression: |
                            {
                              "numeroConvenio": ${exchangeProperty.dadosBanco[convenio]},
                              "indicadorNovaDataVencimento": "S",
                              "alteracaoData": {
                                "novaDataVencimento": "${bean:formataData.tratarData(${exchangeProperty.dadosBoleto[dataVencimento]},'dd.MM.yyyy')}"
                              },
                              "indicadorNovoValorNominal": "S",
                              "alteracaoValor": {
                                "novoValorNominal": "${exchangeProperty.dadosBoleto[valorNominal]}",
                              }
                            }
                  - setBody:
                      id: setBody-json-bb-alteracao
                      expression:
                        simple:
                          id: simple-json-bb-alteracao
                          expression: ${exchangeProperty.forpayload}
              - id: when-bb-cancelamento
                description: cancelaBoleto
                expression:
                  simple:
                    id: simple-op-bb-cancelamento
                    expression: ${exchangeProperty.rota[tipo]} == "cancelamento"
                steps:
                  - setProperty:
                      id: setProperty-cancelamento-forpayload
                      description: forpaypload
                      name: forpayload
                      expression:
                        simple:
                          id: simple-cancelamento-forpayload
                          expression: |
                            {
                              "numeroConvenio": ${exchangeProperty.dadosBanco[convenio]}
                            }
                  - setBody:
                      id: setBody-json-bb-cancelamento
                      expression:
                        simple:
                          id: simple-json-bb-cancelamento
                          expression: ${exchangeProperty.forpayload}
            otherwise:
              id: otherwise-op-bb
              steps:
                - setHeader:
                    id: setHeader-34b7
                    name: CamelHttpResponseCode
                    expression:
                      simple:
                        id: simple-4933
                        expression: "400"
                - setBody:
                    id: setBody-aaa4
                    expression:
                      simple:
                        id: simple-1a5c
                        expression: >-
                          { "erro": "Não foi possível identificar o tipo de rota
                          enviado (inclusao/alteracao/cancelamento)",

                          "tipo": "${exchangeProperty.rota[tipo]}"

                          }
                - stop:
                    id: stop-0cc6
        - to:
            id: to-bb-cobranca
            disabled: false
            uri: direct
            parameters:
              name: bb-cobranca
- route:
    id: bb-cobranca
    nodePrefixId: route-ecf
    from:
      id: from-bb-cobranca
      uri: direct
      parameters:
        name: bb-cobranca
      steps:
        - log:
            id: log-4a6b
            message: "####ROUTE-BB-COBRANCA#####"
        - log:
            id: log-aa16
            message: "TOKEN: ${exchangeProperty.tokenBancario}"
        - setHeader:
            id: setHeader-content-type-bb-cobranca
            name: Content-Type
            expression:
              constant:
                id: constant-content-type-bb-cobranca
                expression: application/json
        - setBody:
            id: setBody-bb-cobranca
            expression:
              simple:
                id: simple-bb-cobranca
                expression: ${exchangeProperty.forpayload}
        - convertBodyTo:
            id: convertBodyTo-bb-cobranca
            type: java.lang.String
        - doTry:
            id: doTry-bb-cobranca
            doCatch:
              - id: doCatch-bb-cobranca
                exception:
                  - java.lang.Exception
                steps:
                  - setHeader:
                      id: setHeader-http-status
                      name: CamelHttpResponseCode
                      expression:
                        simple:
                          id: simple-http-status
                          expression: ${header.CamelHttpResponseCode}
                  - setBody:
                      id: setBody-erro
                      expression:
                        simple:
                          id: simple-erro
                          expression: ${exception.getResponseBody()}
                  - stop:
                      id: stop-erro
            steps:
              - log:
                  id: log-5e1d
                  message: "### depois auth ###"
              - setHeader:
                  id: setHeader-authorization
                  name: Authorization
                  expression:
                    simple:
                      id: simple-authorization
                      expression: Bearer ${exchangeProperty.tokenBancario}
              - setHeader:
                  id: setHeader-gwkey
                  disabled: false
                  name: X-Developer-Application-Key
                  expression:
                    simple:
                      id: simple-gwkey
                      expression: 143851dc56ae48a794078dbe3c964d42
              - log:
                  id: log-c7e4
                  message: ${exchangeProperty.bancoAppKey}
              - choice:
                  id: choice-rota-saida
                  when:
                    - id: envio-bb-inclusao
                      expression:
                        simple:
                          id: simple-envio-bb-inclusao
                          expression: ${exchangeProperty.rota[tipo]} == "inclusao"
                      steps:
                        - log:
                            id: log-aefa
                            message: "### ENVIANDO-INCLUSAO-COBRANCA-BB#####"
                        - setProperty:
                            id: setProperty-1fbd
                            description: setUrl
                            disabled: true
                            name: setUrl
                            expression:
                              simple:
                                id: simple-faa7
                                expression: >-
                                  https://api.hm.bb.com.br/cobrancas/v2/boletos?gw-dev-app-key=${exchangeProperty.bancoAppKey}
                        - toD:
                            id: toD-bb-cobranca
                            uri: https://api.hm.bb.com.br/cobrancas/v2/boletos
                            parameters:
                              httpMethod: POST
                              logHttpActivity: true
                              bridgeEndpoint: true
                              httpUri: https://api.hm.bb.com.br/cobrancas/v2/boletos
                        - setBody:
                            id: setBody-bb-aceito
                            expression:
                              simple:
                                id: simple-bb-aceito
                                expression: ${body}
                        - log:
                            id: log-response-success-inclusao
                            message: "Resposta BB: ${body}"
                            loggingLevel: INFO
                            logName: bb-cobranca
                    - id: envio-bb-alteracao
                      expression:
                        simple:
                          id: simple-envio-bb-alteracao
                          expression: ${exchangeProperty.rota[tipo]} != "inclusao"
                      steps:
                        - toD:
                            id: toD-bb-cobranca-alteracao
                            uri: >-
                              https://api.hm.bb.com.br/cobrancas/v2/boletos/${exchangeProperty.dadosBoleto[numeroNossoNumero]}
                            parameters:
                              gwDevAppKey: ${exchangeProperty.appKey}
                              httpMethod: PATCH
                              logHttpActivity: false
                              bridgeEndpoint: false
                        - setBody:
                            id: setBody-bb-alteracao
                            expression:
                              simple:
                                id: simple-bb-alteracao
                                expression: ${body}
                        - log:
                            id: log-response-success-alteracao
                            message: "Resposta BB: ${body}"
                            loggingLevel: INFO
                            logName: bb-cobranca
                  otherwise:
                    id: otherwise-bb-operacao-desconhecida
                    steps:
                      - setHeader:
                          id: setHeader-bb-erro
                          name: CamelHttpResponseCode
                          expression:
                            simple:
                              id: simple-status-erro-bb
                              expression: "400"
                      - setBody:
                          id: setBody-bb-erro
                          expression:
                            simple:
                              id: simple-erro-operacao
                              expression: |
                                {
                                  "mensagem": "Operação não suportada: ${exchangeProperty.rota[tipo]}"
                                }
