- rest:
    id: rest-api-pix
    post:
      - id: post-api-pix
        path: /teste
        to: direct:validar-payload
        consumes: application/json
        produces: application/json
- route:
    id: route-valida-payload
    nodePrefixId: route-valida-payload
    from:
      id: from-api-pix
      uri: direct
      parameters:
        name: validar-payload
      steps:
        - doTry:
            id: doTry-valida-payload
            doCatch:
              - id: doCatch-valida-payload
                exception:
                  - java.lang.Exception
                steps:
                  - convertBodyTo:
                      id: convertBodyTo-exception-string
                      type: java.lang.String
                  - setHeader:
                      id: setHeader-ca85
                      name: CamelHttpResponseCode
                      expression:
                        simple:
                          id: simple-status-400
                          expression: "400"
                  - setHeader:
                      id: setHeader-exception-content
                      name: Content-Type
                      expression:
                        constant:
                          id: constant-content-json
                          expression: application/json
                  - setBody:
                      id: setBody-exception-message
                      expression:
                        simple:
                          id: simple-exception-message
                          expression: >-
                            { "mensagem": "Erro no payload:
                            ${exception.message.replaceAll('\r?\n', ' ')}" }
                  - stop:
                      id: stop-on-exception
            steps:
              - to:
                  id: to-json-validator-schema
                  uri: json-validator
                  parameters:
                    resourceUri: file:nexdom-schema.json
              - unmarshal:
                  id: unmarshal-json
                  json:
                    id: json-unmarshal
              - setProperty:
                  id: setProperty-rota
                  name: rota
                  expression:
                    simple:
                      id: simple-extract-rota
                      expression: ${body[rota]}
              - setProperty:
                  id: setProperty-payload
                  name: payload
                  expression:
                    simple:
                      id: simple-extract-payload
                      expression: ${body[payload]}
              - setProperty:
                  id: setProperty-dadosBoleto
                  name: dadosBoleto
                  expression:
                    simple:
                      id: simple-extract-dadosBoleto
                      expression: ${exchangeProperty.payload[dadosBoleto]}
              - setProperty:
                  id: setProperty-dadosBanco
                  name: dadosBanco
                  expression:
                    simple:
                      id: simple-extract-dadosBanco
                      expression: ${exchangeProperty.payload[dadosBanco]}
              - setProperty:
                  id: setProperty-beneficiario
                  name: beneficiario
                  expression:
                    simple:
                      id: simple-extract-beneficiario
                      expression: ${exchangeProperty.payload[beneficiario]}
              - setProperty:
                  id: setProperty-pagador
                  name: pagador
                  expression:
                    simple:
                      id: simple-extract-pagador
                      expression: ${exchangeProperty.payload[pagador]}
              - setProperty:
                  id: setProperty-instrucoes
                  name: instrucoes
                  expression:
                    simple:
                      id: simple-77cc
                      expression: ${exchangeProperty.payload[instrucoes]}
              - setProperty:
                  id: setProperty-mensagens
                  name: mensagens
                  expression:
                    simple:
                      id: simple-extract-mensagens
                      expression: ${exchangeProperty.payload[mensagens]}
              - setProperty:
                  id: setProperty-descontos
                  name: descontos
                  expression:
                    simple:
                      id: simple-extract-descontos
                      expression: ${exchangeProperty.payload[descontos]}
              - marshal:
                  id: marshal-payload-json
                  json:
                    id: json-marshal
              - to:
                  id: to-validate-banco
                  uri: direct
                  parameters:
                    name: valida-banco
- route:
    id: route-valida-banco
    nodePrefixId: route-valida-banco
    from:
      id: from-valida-banco
      uri: direct
      parameters:
        name: valida-banco
      steps:
        - choice:
            id: choice-roteamento-banco
            when:
              - id: when-banco-brasil
                expression:
                  simple:
                    id: simple-match-brasil
                    expression: ${exchangeProperty.rota[codigoBanco]} == 1
                steps:
                  - to:
                      id: to-banco-brasil
                      uri: direct
                      parameters:
                        name: banco-brasil
              - id: when-banco-bradesco
                expression:
                  simple:
                    id: simple-match-bradesco
                    expression: ${exchangeProperty.rota[codigoBanco].intValue} == 234
                steps:
                  - to:
                      id: to-banco-bradesco
                      uri: direct
                      parameters:
                        name: banco-bradesco
              - id: when-banco-sicoob
                expression:
                  simple:
                    id: simple-match-sicoob
                    expression: ${exchangeProperty.rota[codigoBanco].intValue} == 756
                steps:
                  - to:
                      id: to-banco-sicoob
                      uri: direct
                      parameters:
                        name: banco-sicoob
              - id: when-banco-unicred
                expression:
                  simple:
                    id: simple-match-unicred
                    expression: ${exchangeProperty.rota[codigoBanco].intValue} == 748
                steps:
                  - to:
                      id: to-banco-unicred
                      uri: direct
                      parameters:
                        name: banco-unicred
              - id: when-banco-santander
                expression:
                  simple:
                    id: simple-match-santander
                    expression: ${exchangeProperty.rota[codigoBanco].intValue} == 33
                steps:
                  - to:
                      id: to-banco-santander
                      uri: direct
                      parameters:
                        name: banco-santander
              - id: when-banco-sicredi
                expression:
                  simple:
                    id: simple-match-sicredi
                    expression: ${exchangeProperty.rota[codigoBanco].intValue} == 748
                steps:
                  - to:
                      id: to-banco-sicredi
                      uri: direct
                      parameters:
                        name: banco-sicredi
              - id: when-banco-safra
                expression:
                  simple:
                    id: simple-match-safra
                    expression: ${exchangeProperty.rota[codigoBanco].intValue} == 422
                steps:
                  - to:
                      id: to-banco-safra
                      uri: direct
                      parameters:
                        name: banco-safra
              - id: when-banco-itau
                expression:
                  simple:
                    id: simple-match-itau
                    expression: ${exchangeProperty.rota[codigoBanco].intValue} == 341
                steps:
                  - to:
                      id: to-banco-itau
                      uri: direct
                      parameters:
                        name: banco-itau
            otherwise:
              id: otherwise-banco-invalido
              steps:
                - setHeader:
                    id: setHeader-status-erro-banco
                    name: CamelHttpResponseCode
                    expression:
                      simple:
                        id: simple-status-400
                        expression: "400"
                - setBody:
                    id: setBody-mensagem-banco-invalido
                    expression:
                      simple:
                        id: simple-msg-banco-invalido
                        expression: |
                          {
                            "mensagem": "Banco inv√°lido",
                            "codigoBanco": "${exchangeProperty.rota[codigoBanco]}"
                          }
- route:
    id: route-banco-brasil
    nodePrefixId: route-banco-brasil
    from:
      id: from-banco-brasil
      uri: direct
      parameters:
        name: banco-brasil
      steps:
        - choice:
            id: choice-operacao-bb
            when:
              - id: when-bb-inclusao
                expression:
                  simple:
                    id: simple-op-bb-inclusao
                    expression: ${exchangeProperty.rota[tipo]} == "inclusao"
                steps:
                  - setProperty:
                      id: setProperty-inclusao-forpayload
                      name: forpayload
                      expression:
                        simple:
                          id: simple-inclusao-forpayload
                          expression: |
                            {
                              "numeroConvenio": "${exchangeProperty.dadosBanco[convenio]}",
                              "numeroCarteira": "${exchangeProperty.dadosBanco[carteira]}",
                              "numeroVariacaoCarteira": "${exchangeProperty.dadosBanco[variacao]}",
                              "codigoModalidade": "${exchangeProperty.dadosBanco[codigoModalidade]}",
                              "dataEmissao": "${bean:formataData.tratarData(${exchangeProperty.dadosBoleto[dataEmissao]},'dd.MM.yyyy')}",
                              "dataVencimento": "${bean:formataData.tratarData(${exchangeProperty.dadosBoleto[dataVencimento]},'dd.MM.yyyy')}",
                              "valorOriginal": "${exchangeProperty.dadosBoleto[valorNominal]}",
                              "valorAbatimento": "${exchangeProperty.descontos[valorDesconto]}",
                              "quantidadeDiasProtesto": "N√ÉO OBR. - VERIFICAR NAO EXISTE NO PAYLOAD",
                              "quantidadeDiasNegativacao": "N√ÉO OBR. - VERIFICAR NAO EXISTE NO PAYLOAD",
                              "orgaoNegativador": "N√ÉO OBR. - VERIFICAR NAO EXISTE NO PAYLOAD",
                              "indicadorAceiteTituloVencido": "N√ÉO OBR. - VERIFICAR NAO EXISTE NO PAYLOAD",
                              "numeroDiasLimiteRecebimento": "N√ÉO OBR. - VERIFICAR NAO EXISTE NO PAYLOAD",
                              "codigoAceite": "${exchangeProperty.dadosBoleto[aceite]}",
                              "descricaoTipoTitulo": "${exchangeProperty.dadosBoleto[especieDocumento]}",
                              "indicadorRecebimentoParcial": "N√ÉO OBR. - VERIFICAR NAO EXISTE NO PAYLOAD",
                              "numeroTituloBeneficiario": "${exchangeProperty.dadosBoleto[numeroDocumento]}",
                              "campoUtilizacaoBeneficiario": "${exchangeProperty.dadosBoleto[numeroDocumento]}",
                              "numeroTituloCliente": "${exchangeProperty.dadosBoleto[numeroNossoNumero]}",
                              "mensagemBloquetoOcorrencia": "nada",
                              "jurosMora": {
                                "tipo": 2,
                                "valor": ${exchangeProperty.dadosBoleto[valorJuros]},
                                "atencao": "ADICIONAR NO PAYPLOAD ORIGINAL 1 e 2 para TIPO assim fica mais facil tratar aqui"
                              },    
                              "multa": {
                                "tipo": 2,
                                "data": "${bean:formataData.tratarData(${exchangeProperty.dadosBoleto[dataVencimento]},'dd.MM.yyyy')}",
                                "porcentagem": ${exchangeProperty.dadosBoleto[valorMulta]},
                                "atencao": "ADICIONAR NO PAYPLOAD ORIGINAL DATA VENCIMENTO + 1 qua nao tem"
                              },
                              "pagador": {
                                "tipoInscricao": "ADICIONAR ALEM DE P e J o valor 1 e 2 para ficar mais facil aqui",
                                "numeroInscricao": "${exchangeProperty.pagador[documento]}",
                                "nome": "${exchangeProperty.pagador[nome]}",
                                "endereco": "${exchangeProperty.pagador[endereco][logradouro]}",
                                "cep": "${exchangeProperty.pagador[endereco][cep]}",
                                "cidade": "${exchangeProperty.pagador[endereco][cidade]}",
                                "bairro": "${exchangeProperty.pagador[endereco][bairro]}",
                                "uf": "${exchangeProperty.pagador[endereco][uf]}",
                                "telefone": "${exchangeProperty.pagador[telefone]}",
                                "email": ""
                              },
                              "beneficiarioFinal": {
                                "tipoInscricao": "ADICIONAR ALEM DE P e J o valor 1 e 2 para ficar mais facil aqui",
                                "numeroInscricao": "${exchangeProperty.beneficiario[documento]}",
                                "nome": "${exchangeProperty.beneficiario[nome]}"
                              },
                              "indicadorPix": "S"
                            }
                  - setBody:
                      id: setBody-json-bb-inclusao
                      expression:
                        simple:
                          id: simple-json-bb-inclusao
                          expression: ${exchangeProperty.forpayload}
              - id: when-bb-alteracao
                expression:
                  simple:
                    id: simple-op-bb-alteracao
                    expression: ${exchangeProperty.rota[tipo]} == "alteracao"
                steps:
                  - setProperty:
                      id: setProperty-alteracao-forpayload
                      name: forpayload
                      expression:
                        simple:
                          id: simple-alteracao-forpayload
                          expression: |
                            {
                              "numeroConvenio": ${exchangeProperty.dadosBanco[convenio]},
                              "indicadorNovaDataVencimento": "S",
                              "alteracaoData": {
                                "novaDataVencimento": "${bean:formataData.tratarData(${exchangeProperty.dadosBoleto[dataVencimento]},'dd.MM.yyyy')}"
                              },
                              "indicadorNovoValorNominal": "S",
                              "alteracaoValor": {
                                "novoValorNominal": "${exchangeProperty.dadosBoleto[valorNominal]}",
                              }
                            }
                  - setBody:
                      id: setBody-json-bb-alteracao
                      expression:
                        simple:
                          id: simple-json-bb-alteracao
                          expression: ${exchangeProperty.forpayload}
              - id: when-bb-cancelamento
                expression:
                  simple:
                    id: simple-op-bb-cancelamento
                    expression: ${exchangeProperty.rota[tipo]} == "cancelamento"
                steps:
                  - setProperty:
                      id: setProperty-cancelamento-forpayload
                      name: forpayload
                      expression:
                        simple:
                          id: simple-cancelamento-forpayload
                          expression: |
                            {
                              "numeroConvenio": ${exchangeProperty.dadosBanco[convenio]}
                            }
                  - setBody:
                      id: setBody-json-bb-cancelamento
                      expression:
                        simple:
                          id: simple-json-bb-cancelamento
                          expression: ${exchangeProperty.forpayload}
            otherwise:
              id: otherwise-op-bb
              steps:
                - log:
                    id: log-op-nao-identificada-bb
                    message: N√£o foi possivel identificar a a√ß√£o
        - to:
            id: to-bb-cobranca
            uri: direct
            parameters:
              name: bb-cobranca
- route:
    id: bb-cobranca
    nodePrefixId: route-ecf
    from:
      id: from-bb-cobranca
      uri: direct
      parameters:
        name: bb-cobranca
      steps:
        - setProperty:
            id: setProperty-appkey
            name: appKey
            expression:
              constant:
                id: constant-appkey
                expression: 143851dc56ae48a794078dbe3c964d42
        - setProperty:
            id: setProperty-clientid
            name: client_id
            expression:
              constant:
                id: constant-clientid
                expression: >-
                  eyJpZCI6ImYzOTY1MjAtMzQwNi00MWMzIiwiY29kaWdvUHVibGljYWRvciI6MCwiY29kaWdvU29mdHdhcmUiOjEzNTk2MCwic2VxdWVuY2lhbEluc3RhbGFjYW8iOjF9
        - setProperty:
            id: setProperty-clientsecret
            name: client_secret
            expression:
              constant:
                id: constant-clientsecret
                expression: >-
                  eyJpZCI6ImQ3ZDE5ODQtNjU5MC00YTZhLWIxZDUtMGZkMTczMDc1Nzc0OGRjZGYzIiwiY29kaWdvUHVibGljYWRvciI6MCwiY29kaWdvU29mdHdhcmUiOjEzNTk2MCwic2VxdWVuY2lhbEluc3RhbGFjYW8iOjEsInNlcXVlbmNpYWxDcmVkZW5jaWFsIjoyLCJhbWJpZW50ZSI6ImhvbW9sb2dhY2FvIiwiaWF0IjoxNzUzMjEwMzgzNjUzfQ
        - setHeader:
            id: setHeader-content-type-bb-cobranca
            name: Content-Type
            expression:
              constant:
                id: constant-content-type-bb-cobranca
                expression: application/json
        - setBody:
            id: setBody-bb-cobranca
            expression:
              simple:
                id: simple-bb-cobranca
                expression: ${exchangeProperty.forpayload}
        - convertBodyTo:
            id: convertBodyTo-bb-cobranca
            type: java.lang.String
        - doTry:
            id: doTry-bb-cobranca
            doCatch:
              - id: doCatch-bb-cobranca
                exception:
                  - java.lang.Exception
                steps:
                  - setHeader:
                      id: setHeader-http-status
                      name: CamelHttpResponseCode
                      expression:
                        simple:
                          id: simple-http-status
                          expression: ${header.CamelHttpResponseCode}
                  - setBody:
                      id: setBody-erro
                      expression:
                        simple:
                          id: simple-erro
                          expression: ${exception.getResponseBody()}
                  - stop:
                      id: stop-erro
            steps:
              - setProperty:
                  id: setProperty-token
                  name: token
                  expression:
                    simple:
                      id: simple-token
                      expression: >-
                        ${bean:tokenBancario.getBbTokenClientCredentials(${exchangeProperty.client_id},
                        ${exchangeProperty.client_secret})}
              - setHeader:
                  id: setHeader-authorization
                  name: Authorization
                  expression:
                    simple:
                      id: simple-authorization
                      expression: Bearer ${exchangeProperty.token}
              - setHeader:
                  id: setHeader-gwkey
                  name: gw-dev-app-key
                  expression:
                    simple:
                      id: simple-gwkey
                      expression: ${exchangeProperty.appKey}
              - toD:
                  id: toD-bb-cobranca
                  uri: https://api.hm.bb.com.br/cobrancas/v2/boletos
                  parameters:
                    httpMethod: POST
                    logHttpActivity: false
                    bridgeEndpoint: true
              - setBody:
                  id: setBody-bb-aceito
                  expression:
                    simple:
                      id: simple-bb-aceito
                      expression: ${body}
              - log:
                  id: log-response-success
                  message: "Resposta BB: ${body}"
                  loggingLevel: INFO
                  logName: bb-cobranca
