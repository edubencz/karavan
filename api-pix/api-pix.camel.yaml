- rest:
    id: rest-15dc
    post:
      - id: post-5ac2
        description: Criação de cobrança dinâmica com QR Code
        path: /gerar-qrcode
        to: direct:validar-payload
        consumes: application/json
        produces: application/json
- route:
    id: validar-payload
    from:
      id: from-9a4a
      uri: direct
      parameters:
        name: validar-payload
        bridgeErrorHandler: false
      steps:
        - doTry:
            id: doTry-dfa0
            doCatch:
              - id: doCatch-b058
                exception:
                  - java.lang.Exception
                steps:
                  - setHeader:
                      id: setHeader-1c75
                      name: CamelHttpResponseCode
                      expression:
                        simple:
                          id: simple-e958
                          expression: "400"
                  - setBody:
                      id: setBody-0a21
                      expression:
                        simple:
                          id: simple-4330
                          expression: >-
                            { "mensagem": "Erro no payload:
                            ${exception.message.replaceAll('\\r?\\n', ' ')}" }
                  - stop:
                      id: stop-6f88
            steps:
              - to:
                  id: to-9d51
                  uri: json-validator
                  parameters:
                    resourceUri: file:payload-schema.json
              - unmarshal:
                  id: unmarshal-json
                  json:
                    id: json-jackson
                    library: Jackson
              - setProperty:
                  id: setProperty-add0
                  name: payload
                  expression:
                    simple:
                      id: simple-3737
                      expression: ${body[payload]}
              - setProperty:
                  id: setProperty-7d75
                  name: rota
                  expression:
                    simple:
                      id: simple-7f4c
                      expression: ${body[rota]}
              - setProperty:
                  id: setProperty-b73c
                  name: txid
                  expression:
                    simple:
                      id: simple-05fe
                      expression: ${body[rota][txid]}
              - setProperty:
                  id: setProperty-d334
                  name: appKey
                  expression:
                    simple:
                      id: simple-db3a
                      expression: ${body[rota][appKey]}
              - process:
                  id: process-87df
                  description: CredentialDecoder
                  ref: CredentialDecoder
        - to:
            id: to-f7dc
            uri: direct
            parameters:
              name: criar-cobranca-dinamica
- route:
    id: criar-cobranca-dinamica
    from:
      id: from-7c6a
      uri: direct
      parameters:
        name: criar-cobranca-dinamica
      steps:
        - choice:
            id: choice-30c4
            when:
              - id: when-4da1
                expression:
                  simple:
                    id: simple-dcf9
                    expression: ${body[rota][bancoDestino]} == 'BANCODOBRASIL'
                steps:
                  - to:
                      id: to-0138
                      uri: direct
                      parameters:
                        name: bb-cobranca
              - id: when-0de0
                expression:
                  simple:
                    id: simple-a625
                    expression: ${body[rota][bancoDestino]} == 'ITAU'
                steps:
                  - to:
                      id: to-8156
                      uri: direct
                      parameters:
                        name: itau-cobranca
            otherwise:
              id: otherwise-f30e
              steps:
                - setBody:
                    id: setBody-59c1
                    expression:
                      simple:
                        id: simple-66c3
                        expression: "{ \"mensagem\": \"Banco não implementado\" }"
                - setHeader:
                    id: setHeader-6a8f
                    name: Content-Type
                    expression:
                      constant:
                        id: constant-6edf
                        expression: application/json
                - setHeader:
                    id: setHeader-c5f4
                    name: CamelHttpResponseCode
                    expression:
                      constant:
                        id: constant-0700
                        expression: "400"
- route:
    id: bb-cobranca
    nodePrefixId: route-ecf
    from:
      id: from-4b02
      uri: direct
      parameters:
        name: bb-cobranca
      steps:
        - setHeader:
            id: setHeader-93e9
            name: Content-Type
            expression:
              constant:
                id: constant-ee85
                expression: application/json
        - setBody:
            id: setBody-ccf3
            expression:
              simple:
                id: simple-3ca6
                expression: ${exchangeProperty.payload}
        - marshal:
            id: marshal-846e
            json:
              id: json-9278
              library: Jackson
        - log:
            id: log-f281
            message: ${body}
            logName: body antes do envio
        - doTry:
            id: doTry-0325
            doCatch:
              - id: doCatch-e8de
                exception:
                  - java.lang.Exception
                steps:
                  - setHeader:
                      id: setHeader-f6fc
                      name: CamelHttpResponseCode
                      expression:
                        simple:
                          id: simple-1fc2
                          expression: ${exception.statusCode}
                  - setBody:
                      id: setBody-117a
                      expression:
                        simple:
                          id: simple-910c
                          expression: "{\r\n    \"mensagem\": \"Erro na comunicação com BB: ${exception.message.replaceAll('\\\\r?\\\\n', ' ')}\",\r\n    \"resposta\": ${exception.responseBody}\r\n}"
                  - stop:
                      id: stop-8420
            steps:
              - toD:
                  id: to-bb
                  uri: https
                  parameters:
                    httpUri: >-
                      api.hm.bb.com.br/pix/v2/cobv/${exchangeProperty.txid}?gw-dev-app-key=${exchangeProperty.appKey}
                    httpMethod: PUT
                    logHttpActivity: true
                    oauth2ClientId: ${exchangeProperty.client_id}
                    oauth2Scope: cobv.write
                    oauth2TokenEndpoint: https://oauth.hm.bb.com.br/oauth/token
                    bridgeEndpoint: true
                    oauth2CacheTokens: false
                    oauth2CachedTokensDefaultExpirySeconds: "180"
                    oauth2ClientSecret: ${exchangeProperty.client_secret}
              - setBody:
                  id: setBody-4cc1
                  expression:
                    simple:
                      id: simple-dc9b
                      expression: ${body}
        - to:
            id: to-extrair-bb
            uri: direct
            parameters:
              name: extrair-pix-copiaecola
- route:
    id: token-itau
    group: itau
    from:
      id: from-264b
      uri: direct
      parameters:
        name: token-itau
      steps:
        - setHeader:
            id: setHeader-a4d8
            name: Content-Type
            expression:
              constant:
                id: constant-6e22
                expression: application/x-www-form-urlencoded
        - setBody:
            id: setBody-9f2b
            expression:
              simple:
                id: simple-2bb6
                expression: >-
                  grant_type=client_credentials&client_id=${exchangeProperty.client_id}&client_secret=${exchangeProperty.client_secret}&scope=cob.read
                  cob.write
        - doTry:
            id: doTry-f9c6
            doCatch:
              - id: doCatch-91be
                exception:
                  - java.lang.Exception
                steps:
                  - setHeader:
                      id: setHeader-700f
                      name: CamelHttpResponseCode
                      expression:
                        simple:
                          id: simple-7bfa
                          expression: ${exception.statusCode}
                  - setBody:
                      id: setBody-c3db
                      expression:
                        simple:
                          id: simple-39cd
                          expression: "{\r\n    \"mensagem\": \"Erro na comunicação com autenticação ITAU: ${exception.message.replaceAll('\\\\r?\\\\n', ' ')}\",\r\n    \"resposta\": ${exception.responseBody}\r\n}"
                  - stop:
                      id: stop-3f51
            steps:
              - toD:
                  id: to-5495
                  uri: https
                  parameters:
                    bridgeEndpoint: true
                    httpUri: sandbox.devportal.itau.com.br/api/oauth/jwt
                    logHttpActivity: true
                    throwExceptionOnFailure: true
        - unmarshal:
            id: unmarshal-1d3f
            json:
              id: json-1172
              library: Jackson
        - setHeader:
            id: setHeader-cb81
            name: Authorization
            expression:
              simple:
                id: simple-87c3
                expression: Bearer ${body[access_token]}
- route:
    id: itau-cobranca
    group: itau
    from:
      id: from-6e82
      uri: direct
      parameters:
        name: itau-cobranca
      steps:
        - to:
            id: to-19e5
            uri: direct
            parameters:
              name: token-itau
        - setHeader:
            id: setHeader-334a
            name: Content-Type
            expression:
              constant:
                id: constant-23ef
                expression: application/json
        - setBody:
            id: setBody-646d
            expression:
              simple:
                id: simple-92e1
                expression: ${exchangeProperty.payload}
        - marshal:
            id: marshal-725a
            json:
              id: json-48df
              library: Jackson
        - doTry:
            id: doTry-05be
            doCatch:
              - id: doCatch-31c9
                exception:
                  - java.lang.Exception
                steps:
                  - setHeader:
                      id: setHeader-4a36
                      name: CamelHttpResponseCode
                      expression:
                        simple:
                          id: simple-3d09
                          expression: ${exception.statusCode}
                  - setBody:
                      id: setBody-d4fb
                      expression:
                        simple:
                          id: simple-f7f7
                          expression: "{\r\n    \"mensagem\": \"Erro na comunicação com ITAU: ${exception.message.replaceAll('\\\\r?\\\\n', ' ')}\",\r\n    \"resposta\": ${exception.responseBody}\r\n}"
                  - stop:
                      id: stop-724c
            steps:
              - toD:
                  id: to-29a1
                  uri: https
                  parameters:
                    logHttpActivity: true
                    bridgeEndpoint: true
                    httpUri: >-
                      sandbox.devportal.itau.com.br/itau-ep9-gtw-pix-recebimentos-ext-v2/v2/cobv/88ba8ec675e044178d434908d9b2a30a
                    httpMethod: PUT
        - to:
            id: to-extrair-itau
            uri: direct
            parameters:
              name: extrair-pix-copiaecola
- route:
    id: extrair-pix-copiaecola
    from:
      id: from-extrair-pix
      uri: direct
      parameters:
        name: extrair-pix-copiaecola
      steps:
        - convertBodyTo:
            id: convertBodyTo-7f21
            type: java.lang.String
        - unmarshal:
            id: unmarshal-11dc
            json:
              id: json-7d8b
              library: Jackson
        - setBody:
            id: setBody-map
            expression:
              simple:
                id: simple-map
                expression: "{\r\n    \"txid\":\"${body[txid]}\"\r\n    \"pixCopiaECola\":\"${body[pixCopiaECola]}\"\r\n}\r\n"
